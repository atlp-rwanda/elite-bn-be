name: Github actions

on:
  push:
    branches: [dev]
  pull_request:
    branches: [dev]

jobs:
  build:
    runs-on: ${{matrix.os}}
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: postgres
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432
    strategy:
      matrix:
        os: [ubuntu-latest]
        node-version: [12.x, 14.x, 16.x]
        redis-version: [6]
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      - name: Start Redis
        uses: supercharge/redis-github-action@1.4.0
        with:
          redis-version: ${{ matrix.redis-version }}

      - run: npm i
      - run: npm run build
      - run: npm test
      - run: npm run coveralls

env:
  FACEBOOK_CALLBACK_URL: ${{secrets.FACEBOOK_CALLBACK_URL}}
  FACEBOOK_CLIENT_ID: ${{secrets.FACEBOOK_CLIENT_ID}}
  FACEBOOK_CLIENT_SECRET: ${{secrets.FACEBOOK_CLIENT_SECRET}}
  GOOGLE_CALLBACK_URL: ${{secrets.GOOGLE_CALLBACK_URL}}
  GOOGLE_CLIENT_ID: ${{secrets.GOOGLE_CLIENT_ID}}
  GOOGLE_CLIENT_SECRET: ${{secrets.GOOGLE_CLIENT_SECRET}}
  JWT_COOKIE_EXPIRES_IN: ${{secrets.JWT_COOKIE_EXPIRES_IN}}
  JWT_KEY: ${{secrets.JWT_KEY}}
  JWT_SECRET: ${{secrets.JWT_SECRET}}
  JWT_EXPIRES_IN: ${{secrets.JWT_EXPIRES_IN}}
  REFRESH_TOKEN_KEY: ${{secrets.REFRESH_TOKEN_KEY}}
  CLOUDINARY_NAME: ${{secrets.CLOUDINARY_NAME}}
  CLOUDINARY_API_SECRET: ${{secrets.CLOUDINARY_API_SECRET}}
  SECURE: ${{secrets.SECURE}}
  DEV_DATABASE_URL: ${{secrets.DEV_DATABASE_URL}}
  TEST_DATABASE_URL: ${{secrets.TEST_DATABASE_URL}}
  SENDGRID_API_KEY: ${{secrets.SENDGRID_API_KEY}}
  SENDGRID_USERNAME: ${{secrets.SENDGRID_USERNAME}}
  BASE_URL: ${{secrets.BASE_URL}}
  PORT: ${{secrets.PORT}}
  NODE_ENV: ${{secrets.NODE_ENV}}
